from django.db import models


class MetaClass(type):
    def __new__(cls, name, bases, attrs):
        for attr_name, attr_value in attrs.items():
            if not attr_name.startswith("__"):
                attrs[attr_name] = AttributeDescriptor(attr_name, attr_value)
        return super().__new__(cls, name, bases, attrs)


class MetaClassButton(type):
    def __new__(cls, name, bases, attrs):
        for attr_name, attr_value in attrs.items():
            if not attr_name.startswith("__"):
                attrs[attr_name] = AttributeDescriptorButton(attr_name, attr_value)
        return super().__new__(cls, name, bases, attrs)


class AttributeDescriptor:
    def __init__(self, name, value):
        self.name = name
        self.value = value

    def __get__(self, instance, owner):
        if instance is None:
            return self.value

        if Text.objects.filter(title=self.name).exists():
            return Text.objects.get(title=self.name).text
        else:
            new_text = Text(title=self.name, text=self.value)
            new_text.save()
            return new_text.text


class AttributeDescriptorButton:
    def __init__(self, name, value):
        self.name = name
        self.value = value

    def __get__(self, instance, owner):
        if instance is None:
            return self.value

        if ButtonText.objects.filter(title=self.name).exists():
            return ButtonText.objects.get(title=self.name).text
        else:
            new_text = ButtonText(title=self.name, text=self.value)
            new_text.save()
            return new_text.text


class ButtonTexts(metaclass=MetaClassButton):
    conditions = "–£—Å–ª–æ–≤–∏—è"
    instructions = "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"


class Texts(metaclass=MetaClass):
    start = "{code_text}–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –í–∞—Å –≤ –¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–µ —Å–µ—Ç–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ ‚Äú–ì–∞–º–±—Ä–∏–Ω—É—Å‚Äù üçª –∏ —Å—Ç–µ–π–∫-—Ö–∞—É—Å–∞ ‚ÄúBlack Angus‚Äù ü•© . –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–≤–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –Ω–∞ 3 000—Ä. –Ω–∞ –ø–æ—Å–µ—â–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–∞—à–∏—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ:"
    user_error_message = "–ü—Ä–æ—Å—Ç–∏—Ç–µ, –∫–∞–∂–µ—Ç—å—Å—è —á—Ç–æ—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start"
    disabled_for_new_users = "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –æ—Ç–∫–ª—é—á–µ–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞–∏—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
    code_not_found = "–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ"
    unique_code_not_found = "–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤—Å–µ –∫–æ–¥—ã —É–∂–µ —Ä–∞–∑–æ–±—Ä–∞–Ω—ã, —Å–∫–æ—Ä–æ –º—ã –∑–∞–≥—Ä—É–∑–∏–º –Ω–æ–≤—ã–µ"
    new_code_too_early = "–í—ã —É–∂–µ –ø–æ–ª—É—á–∞–ª–∏ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ –≤ —Ç–µ—á–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 30 –¥–Ω–µ–π, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ"
    code_successfully_gotten = "–ü—Ä–∏–Ω—è—Ç–æüî•! –í–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥: {code}\n–ß—Ç–æ —Å –Ω–∏–º –¥–µ–ª–∞—Ç—å, —á–∏—Ç–∞–π—Ç–µ –Ω–∏–∂–µ"
    conditions = """–ö—Ä–∞–π–Ω–∏–π –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–¥: <code>{code}</code>\n\n
–£—Å–ª–æ–≤–∏—è:

üî∏ –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –Ω–∞ –∫–∞–Ω–∞–ª—ã –ì–∞–º–±—Ä–∏–Ω—É—Å –∏ –ë–ª—ç–∫ –ê–Ω–≥—É—Å 
üî∏–£–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç-–∫–æ–¥ –¥–∞–µ—Ç –ø—Ä–∞–≤–æ –Ω–∞ —Å–∫–∏–¥–∫—É 50% –æ—Ç —Å—á–µ—Ç–∞, –Ω–æ –Ω–µ –±–æ–ª–µ–µ 3000 —Ä—É–±–ª–µ–π.
üî∏ –ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ –≤—Å–µ –º–µ–Ω—é –≤ —Å–µ—Ç–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ ‚Äú–ì–∞–º–±—Ä–∏–Ω—É—Å‚Äù –∏ —Å—Ç–µ–π–∫-—Ö–∞—É—Å–∞ ‚ÄúBlack Angus‚Äù 
üî∏ –°–∫–∏–¥–∫–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å—Ç–æ–ª–∞ —Å –ø–æ–º–µ—Ç–∫–æ–π –Ω–∞–ª–∏—á–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç-–∫–æ–¥–∞
üî∏ –ù–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –Ω–∞ –¥–µ–ª–æ–≤—ã–µ –æ–±–µ–¥—ã, —É—Å–ª—É–≥—É ‚Äú—Å —Å–æ–±–æ–π‚Äù –∏ —Ä–∞–∑–¥–µ–ª —Ö–æ—Å–ø–µ—Ä.
üî∏ –ù–µ —Å—É–º–º–∏—Ä—É–µ—Ç—Å—è —Å –¥—Ä—É–≥–∏–º–∏ —Å–∫–∏–¥–∫–∞–º–∏, –∞–∫—Ü–∏—è–º–∏ –∏ —Å–ø–µ—Ü–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏.
üî∏ –ù–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç –ø–æ –ø—è—Ç–Ω–∏—Ü–∞–º –∏ —Å—É–±–±–æ—Ç–∞–º.

–î–∞–Ω–Ω—ã–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç-–∫–æ–¥–æ–º –º–æ–∂–Ω–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–æ 31.07

–î–æ –≤—Å—Ç—Ä–µ—á–∏ –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞—Ö —Å–µ—Ç–∏ ‚Äú–ì–∞–º–±—Ä–∏–Ω—É—Å‚Äù –∏ —Å—Ç–µ–π–∫-—Ö–∞—É—Å–µ ‚ÄúBlack Angus‚Äù!
"""
    instructions = """–ö—Ä–∞–π–Ω–∏–π –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–¥: <code>{code}</code>\n\n
–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:

–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É–Ω–∏–∫–∞–ª—å–Ω—ã–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç-–∫–æ–¥–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫ –≤ —É–¥–æ–±–Ω–æ–º –¥–ª—è –í–∞—Å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ –ø–æ —Å—Å—ã–ª–∫–µ:
üëâüèº https://gambrinus.ru/pivnierestorani 
üëâüèº https://blackangus.rest/bron

–ò–ª–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É :
¬´–ì–∞–º–±—Ä–∏–Ω—É—Å¬ª +7(499)380-87-77 
¬´Black Angus¬ª +7(499)113-00-01

üìå –°–∫–∏–¥–∫–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å—Ç–æ–ª–∞ —Å –ø–æ–º–µ—Ç–∫–æ–π –æ –Ω–∞–ª–∏—á–∏–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç-–∫–æ–¥–∞. 
üìå–ü–µ—Ä–µ–¥ –∑–∞–∫–∞–∑–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥—ä—è–≤–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç-–∫–æ–¥ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞. 

–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –¥–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç-–∫–æ–¥–∞ –¥–æ 31.07.2023

–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –º–µ–Ω—é –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ: 
üëâüèº https://gambrinus.ru/kitchen
üëâüèº https://blackangus.rest/kitchen

–¢–∞–∫–∂–µ ,–æ—Ç –Ω–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –ö–æ–∑—ã—Ä–Ω–∞—è –ö–∞—Ä—Ç–∞, –º—ã –¥–∞—Ä–∏–º –ø–æ–¥–∞—Ä–æ–∫ –ø–æ –∫–æ–¥–æ–≤–æ–º—É —Å–ª–æ–≤—É: 

‚ñ´Ô∏è {code} –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–∞—Ä–∫–∞ –≤ ¬´–ì–∞–º–±—Ä–∏–Ω—É—Å¬ª
‚ñ´Ô∏è {code} –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–∞—Ä–∫–∞ –≤ ¬´Black Angus¬ª

üí∞ –°–∫–∞—á–∞—Ç—å –ö–æ–∑—ã—Ä–Ω—É—é –∫–∞—Ä—Ç—É –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ http://www.trump.ru/
*–∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏, –≤ —Ä–∞–∑–¥–µ–ª–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã.

–î–æ –≤—Å—Ç—Ä–µ—á–∏ –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞—Ö —Å–µ—Ç–∏ ‚Äú–ì–∞–º–±—Ä–∏–Ω—É—Å‚Äù –∏ —Å—Ç–µ–π–∫-—Ö–∞—É—Å–µ ‚ÄúBlack Angus‚Äù!
"""


text_choices = [attr for attr in dir(Texts) if not attr.startswith("__")]
button_text_choices = [attr for attr in dir(ButtonTexts) if not attr.startswith("__")]


texts = Texts()
button_texts = ButtonTexts()


class Text(models.Model):
    class Meta:
        db_table = "text_table"

    title = models.CharField(
        max_length=255,
        choices=[(choice, choice) for choice in text_choices],
        unique=True,
        null=False,
        blank=False,
        verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ",
    )

    text = models.TextField(
        max_length=5000,
        null=False,
        blank=False,
        verbose_name="–¢–µ–∫—Å—Ç",
    )

    class Meta:
        verbose_name = "–¢–µ–∫—Å—Ç"
        verbose_name_plural = "–¢–µ–∫—Å—Ç—ã"


class ButtonText(models.Model):
    class Meta:
        db_table = "button_text_table"

    title = models.CharField(
        max_length=255,
        choices=[(choice, choice) for choice in button_text_choices],
        unique=True,
        null=False,
        blank=False,
        verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ",
    )

    text = models.TextField(
        max_length=5000,
        null=False,
        blank=False,
        verbose_name="–¢–µ–∫—Å—Ç",
    )

    class Meta:
        verbose_name = "–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏"
        verbose_name_plural = "–¢–µ–∫—Å—Ç—ã –∫–Ω–æ–ø–æ–∫"
